"""Test Bayesian neural network base module(s) and utilities."""

import torch

from fastbnns.bnn.base import BNN
from fastbnns.bnn.types import MuVar


def test_bnn() -> None:
    """Test basic functionality of the base BNN class."""
    # Convert a simple neural network to a BNN.
    hidden_features = 3
    nn = torch.nn.Sequential(
        torch.nn.Linear(in_features=1, out_features=hidden_features),
        torch.nn.LeakyReLU(),
        torch.nn.Linear(in_features=hidden_features, out_features=1),
    )
    bnn = BNN(nn=nn, convert_in_place=False)

    # Check that the forward pass behaves as expected.
    batch_size = 3
    x = torch.ones((batch_size, 1))
    out_sampled = bnn(x)
    out_distribution = bnn(MuVar(x))
    out_nn = nn(x)
    assert out_sampled.shape == out_nn.shape, (
        "BNN generated by `bnn.base.BNN` not outputting correct data shape!"
    )
    assert isinstance(out_distribution, MuVar), (
        "BNN generated by `bnn.base.BNN` not outputting correct data type!"
    )
